import { BACKEND_URL } from "@/lib/config/endpoints";
import { ICategory } from "@/lib/config/model";
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";

export const categoryApiSlice = createApi({
    baseQuery: fetchBaseQuery({ baseUrl: `${BACKEND_URL}/categories` }),
    reducerPath: "categoryApi",
    // Tag types are used for caching and invalidation.
    tagTypes: ["Category"],
    endpoints: (build) => ({
      // Supply generics for the return type (in this case `QuotesApiResponse`)
      // and the expected query argument. If there is no argument, use `void`
      // for the argument type instead.
      getCategories: build.query<ICategory[], void>({
        query:()=>'',
      }),
    }),
  });
  
  // Hooks are auto-generated by RTK-Query
  // Same as `categoryApiSlice.endpoints.getQuotes.useQuery`
  export const { useGetCategoriesQuery } = categoryApiSlice;
  